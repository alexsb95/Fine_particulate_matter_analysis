head(airquality)
xyplot(ozone~wind)
xyplot(Ozone~Wind)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind|as.factor(month) , data = airquality, layout = c(5,1))
xyplot(Ozone~Wind|as.factor(Month) , data = airquality, layout = c(5,1))
xyplot(Ozone~Wind|Month , data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
vq
v1
v2
myedit
myedit("plot1.R")
source("plot1.R",TRUE)
source("plot1.R",TRUE)
source('~/R/win-library/3.4/swirl/Courses/Exploratory_Data_Analysis/Lattice_Plotting_System/plot1.R')
source("plot1.R", local = TRUE)
source("plot1.R", local = TRUE)
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = "myxlab", ylab = "myylab", main = "mymain")
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxla", ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(swirl)
swirl()
sample(colors(),10)
colorRamp(c("red","blue"))
pal <- colorRamp(c("red","blue"))
pal(0)
pla(1)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p(6)
p1(6)
0xcc
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p(10)
p2(10)
showMe(p1(20))
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue","greem", alpha = .5))
p3 <- colorRampPalette(c("blue","grem", alpha = .5))
p3 <- colorRampPalette(c("blue","green", alpha = .5))
p3 <- colorRampPalette(c("blue","green"),alpha =.5))
p3 <- colorRampPalette(c("blue","green"),alpha =.5)
p3(5)
plot(x,y, pch = 19, col = rgb(0,.5,.5))
plot(x,y, pch = 19, col = rgb(0,.5,.5,.3))
brewer.pal(3,"BuGun")
cols <- brewer.pal(3,"BuGun")
cols <- brewer.pal(3,"BuGn")
showMe(cols)
colorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = pl(20))
image(volcano, pl(20))
image(volcano
)
image(volcano,col = p1(20))
library(swirl)
swirl()
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy)
?qplot
print(mpg)
qplot(displ, hwy, data = mpg)
library(ggplot2)
qplot(displ, hwy, data = mpg)
dev.off()
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point","smooth"))
qplot(y=hey,data=mpg,color=drv)
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom = "boxplot")
qplot(drv,hwy,data=mpg,geom = "boxplot", color = manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets = .~drv)
qplot(displ,data=mpg,facets = drv~.,binwith=2)
qplot(hwy,data=mpg,facets = drv~.,binwith=2)
qplot(hwy,data=mpg,facets = drv~.,binwidth=2)
qplot(displ,hwy,data = mpg,geom=c("point","smooth"),facets = .~drv)
ggpllot(aes(displ,hwy))
ggplot(aes(displ,hwy))
g <-ggplot(aes(displ,hwy))
g <-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
(g+geom_point())+geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
0
q()
library(swirl)
swirl()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(".~drv")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g + geom_point(color="pink",size=4,alpha=1/2)
g + geom_point(size=4,alpha=1/2,color=drv)
g + geom_point(size=4,alpha=1/2,color=aes(drv))
g + geom_point(size=4,alpha=1/2,color=aes(color=drv))
g + geom_point(size=4,alpha=1/2,aes(color=drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x="Displacement","HwyMilaege")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x="Displacement",y="HwyMilaege")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x="Displacement",y="Hwy Milaege")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x="Displacement",y="Hwy Milaege")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv), size =2, aplha = 1/2) + geom_smooth(size=4,linetype = 3, method = "lm")
g + geom_point(aes(color = drv), size =2, aplha = 1/2) + geom_smooth(size=4,linetype = 3, method = "lm",se =FALSE)
g + geom_point(aes(color = drv), size=2, aplha=1/2) + geom_smooth(size=4,linetype=3, method = "lm",se =FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE) + theme_bw(base_family =  "Times")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + theme_bw(base_family =  "Times")
g + geom_point(aes(color = drv)) + theme_bw(base_family =  "Times")
plot(myx,myy,type="1",ylim = c(-3,3))
plot(myx,myy,type=1,ylim = c(-3,3))
qplot(myx,myy,type=1,ylim = c(-3,3))
qplot(myx,myy,type="1",ylim = c(-3,3))
plot(myx,myy,type="1",ylim = c(-3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
ggplot(testdat,aes(x=myx,y=myy))
g <- ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line(ylim=c(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mog,eas(x=displ,y=hwy,color = factor(year)))
g <- ggplot(mpg,eas(x=displ,y=hwy,color = factor(year)))
g <- ggplot(mpg,aes(x=displ,y=hwy,color = factor(year)))
g+geom_point()
g+geom_point() + faced_grid(drv~cyl,margins = TRUE)
g+geom_point() + facet_grid(drv~cyl,margins = TRUE)
g+geom_point() + facet_grid(drv~cyl,margins = TRUE)+geom_smooth(mehod="lm",se=FALSE,size=2,color="black")
g+geom_point() + facet_grid(drv~cyl,margins = TRUE)+geom_smooth(mehod="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage, title = "Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage", title = "Swirl Rules!")
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="blue")
abline(h=.4,col="blue")
abline(h=.4,col="red")
5
abline(h=.05,col="red")
abline(h=.08,col="red")
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp, mean(distTmp),which.min)
apply(distTmp, 2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust, mean)
tapply(y,newClust, mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp,2,which.min)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=3,col=cols1[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,,3)
kmeans(dataFrame,3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"))
points(kmObj$centers,col=c("black","red","green"),pch = 3, cex = 3, led = 3)
points(kmObj$centers,col=c("black","red","green"),pch = 3, cex = 3, lwd = 3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch = 3, cex = 3, lwd = 3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
library(swirl)
swirl()
dim(ssd)
names(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject==1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
myedit("showXY.R"[1:6])
myedit(1:6)
showMe(1:6)
mdist
mdist(sub1p[,1:3])
mdist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(x[,10:13])
mdist <- dist(sub1[,10:13])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity)
)
svd1 <- scale(sub1[,-c(562,563)])
svd1 <- svd(scale(sub1[,-c(562,563)])
)
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
0
q()
library(swirl)
swirl()
mdist <- dist
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
?myplclust
names(sub1[maxCon])
dim(sub())
dim(sub1
)
kclust <- kmeans(sub1[,-c(562,563)],centers = 6)
kClust <- kmeans(sub1[,-c(562,563)],centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],centers = 6,nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying = which(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch  = 19, ylab = "Laying Cluster")
names(kClust$centers[,1:3])
names(suvb1[,1:3])
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch  = 19, ylab = "Walkdown Cluster")
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%matv
matu%*%d%*%matv
matu%*%diag%*%matv
matu%*%diag%*%t
matu
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] %*% svd1$d[1]) * t(svd1$v[,1])
a1 <- (svd1$u[,1] %*% svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] %*% svd1$d) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a1 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a1 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage( svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage( svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnams
cnames
strsplit(cnames,"|",T)
strsplit(cnames,"|", fixed = T)
cnames <- strsplit(cnames,"|", fixed = T)
head(pm0)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
pm1 <- make.names(cnames[[1]][wcol])
pm1
0
q()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnams
cnames
strsplit(cnames,"|", fixed = T)
cnames <- strsplit(cnames,"|", fixed = T)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log(x0),log(x1))
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
pm1$Date
dates <- pm1$Date
str(date)
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
q()
library(swirl)
swirl()
head(test)
head(dates)
NEI <- readRDS("summarySCC_PM25.rds")
setwd()
getwd()
setwd("C:/Users/Alex/Documents/GitHub/Fine_particulate_matter_analysis")
NEI <- readRDS("summarySCC_PM25.rds")
Emissions_Data <- subset(NEI,NEI$year %in% c(1999,2002,2005,2008))
length(Emissions_Data$year)
length(NEI$year)
NEI$year == 2003
sum(NEI$year == 2003)
?aggregate
Emissions_Data <- aggregate(NEI, by = Year, FUN = sum)
Emissions_Data <- aggregate(NEI, by = year, FUN = sum)
Emissions_Data <- aggregate(NEI, by = NEI$year, FUN = sum)
Emissions_Data <- aggregate(NEI, by = c(NEI$year), FUN = sum)
Emissions_Data <- aggregate(Emissions ~ year ,NEI, FUN = sum)
head(Emissions_Data)
plot(Emissions_Data$Emissions,Emissions_Data$year)
plot(Emissions_Data$year, Emissions_Data$Emissions, xlab = "Year", ylab = "Total emissions")
hist(Emissions_Data$year, Emissions_Data$Emissions, xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the United States")
hist(Emissions_Data$Emissions,breaks = Emissions_Data$year)
hist(Emissions_Data$Emissions)
plot(Emissions_Data$year, Emissions_Data$Emissions, type = "1", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the United States")
plot(Emissions_Data$year, Emissions_Data$Emissions, type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the United States")
plot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = expression("Total emissions from PM" [2.5]* " in the United States")
)
Emissions_Data <- aggregate(Emissions,fips ~ year ,NEI, FUN = sum)
Emissions_Data <- aggregate(Emissions|fips ~ year ,NEI, FUN = sum)
Emissions_Data <- with(NEI,aggregate(NEI$Emissions,by=list(year,fips), FUN = sum))
head(Emissions_Data)
Emissions_Data <- with(NEI,aggregate(NEI$Emissions,by=list(year,fips), FUN = sum, rm.na = T))
head(Emissions_Data)
class(NEI$fips)
NEI$fips[1:20]
sumary(NEI$fips)
summary(NEI$fips)
sum(is.na(NEI$fips))
sum(is.na(NEI$year))
Emissions_Data <- aggregate(Emissions ~ year + fips ,NEI, FUN = sum)
head(Emissions_Data)
Nfips <- as.numeric(NEI$fips)
sum(is.na(Nfips))
library(swirl)
NEI <- readRDS("summarySCC_PM25.rds")
Nfips <- as.factor(NEI$fips)
Nfips[1:20]
sum(is.na(Nfips))
sum(Nfips=NA)
sum(Nfips==NA)
Nfips
str(Nfips)
levels(Nfips)
Maryland_Data <- subset(NEI, NEI$fips == "24510")
Emissions_Data <- aggregate(Emissions ~ year + fips ,Maryland_Data, FUN = sum)
Emissions_Data
Emissions_Data <- aggregate(Emissions ~ year ,Maryland_Data, FUN = sum)
Emissions_Data
plot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the United States")
plot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
summary(NEI$type)
head(NEI$type)
NEI$type[1:50]
Nfips <- as.factor(NEI$type)
summary(Nfips)
Baltimore_Data <- subset(NEI, NEI$fips == "24510")
Emissions_Data <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
Emissions_Data
plot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
library(ggplot2)
qplot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
qplot(Emissions_Data$year, Emissions_Data$Emissions, , color = Emissions_Data$type)
qplot(Emissions_Data$year, Emissions_Data$Emissions, geom="density", color = Emissions_Data$type)
qplot(year, missions, data = Emissions_Data , geom="density",color = Emissions_Data$type)
qplot(year, Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type)
qplot(year,  fill=Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type)
qplot(year,  fill=Emissions, data = Emissions_Data , geom="density")
qplot(year,  fill=Emissions, data = Emissions_Data , geom="density", alpha=I(.5))
qplot(year,  fill=Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type, alpha=I(.5))
Baltimore_Data$type <- as.factor(Baltimore_Data$type)
whith(Emissions_Data, sm.density.compare(year, type, xlab="Miles Per Gallon"))
Emissions_Data$type <- as.factor(Emissions_Data$type)
with(Emissions_Data, sm.density.compare(year, type, xlab="Miles Per Gallon"))
hist(Emissions , break = "year", data = Emissions_Data , color = Emissions_Data$type)
hist(Emissions , breaks = "year", data = Emissions_Data , color = Emissions_Data$type)
with(Emissions_Data, hist(Emissions , breaks = "year", data = Emissions_Data , color = Emissions_Data$type))
qplot(year, data = Emissions_Data, fill = Emissions)
qplot(year, Emissions, data = Emissions_Data, facets = . ~ type)
hist(year, Emissions, data = Emissions_Data, facets = . ~ type)
qplot(year, Emissions, data = Emissions_Data, facets = . ~ type, color = type)
qplot(year, Emissions, data = Emissions_Data, facets = type ~ ., color = type)
qplot(year, Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type, xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
qplot(year, Emissions, data = Emissions_Data ,color = Emissions_Data$type, xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
length(Baltimore_Data$Emissions)
qplot(year, Emissions, data = Baltimore_Data , geom="density",color = Emissions_Data$type, xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
qplot(year, data = Baltimore_Data , geom="density", color = Baltimore_Data$type)
qplot(year, data = Baltimore_Data , geom="density", color = Baltimore_Data$type, alpha=I(.5))
qplot(year, data = Baltimore_Data , geom="density", fill = Baltimore_Data$type, alpha=I(.5))
qplot(year, Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type)
qplot(year, Emissions, data = Emissions_Data , color = Emissions_Data$type)
qplot(year, Emissions, data = Emissions_Data , color = Emissions_Data$type, geom = c("smooth"), method = "lm")
qplot(year, Emissions, data = Emissions_Data , color = Emissions_Data$type, geom = c("points","smooth"), method = "lm")
qplot(year, Emissions, data = Emissions_Data , color = Emissions_Data$type, geom = c("point","smooth"), method = "lm")
source("plot.R")
getwd()
source("plot3.R")
plot3()
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 based on the source type in the Baltimore City, Maryland")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
SCC <- readRDS("Source_Classification_Code.rds")
SCC[1,]
names(SCC)
SCC[1,1:3]
SCC[1,1:2]
SCC[1,1:4]
SCC[1,1:5]
SCC[1,1:6]
SCC[1,1:7]
SCC[1,1:8]
SCC[1,1:9]
SCC[1,1:10]
