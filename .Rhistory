points(kmObj$centers,col=c("black","red","green"),pch = 3, cex = 3, led = 3)
points(kmObj$centers,col=c("black","red","green"),pch = 3, cex = 3, lwd = 3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch = 3, cex = 3, lwd = 3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
library(swirl)
swirl()
dim(ssd)
names(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject==1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
myedit("showXY.R"[1:6])
myedit(1:6)
showMe(1:6)
mdist
mdist(sub1p[,1:3])
mdist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(x[,10:13])
mdist <- dist(sub1[,10:13])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity)
)
svd1 <- scale(sub1[,-c(562,563)])
svd1 <- svd(scale(sub1[,-c(562,563)])
)
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
0
q()
library(swirl)
swirl()
mdist <- dist
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
?myplclust
names(sub1[maxCon])
dim(sub())
dim(sub1
)
kclust <- kmeans(sub1[,-c(562,563)],centers = 6)
kClust <- kmeans(sub1[,-c(562,563)],centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],centers = 6,nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying = which(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch  = 19, ylab = "Laying Cluster")
names(kClust$centers[,1:3])
names(suvb1[,1:3])
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch  = 19, ylab = "Walkdown Cluster")
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%matv
matu%*%d%*%matv
matu%*%diag%*%matv
matu%*%diag%*%t
matu
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] %*% svd1$d[1]) * t(svd1$v[,1])
a1 <- (svd1$u[,1] %*% svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] %*% svd1$d) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a1 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a1 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage( svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage( svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnams
cnames
strsplit(cnames,"|",T)
strsplit(cnames,"|", fixed = T)
cnames <- strsplit(cnames,"|", fixed = T)
head(pm0)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
pm1 <- make.names(cnames[[1]][wcol])
pm1
0
q()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnams
cnames
strsplit(cnames,"|", fixed = T)
cnames <- strsplit(cnames,"|", fixed = T)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log(x0),log(x1))
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
pm1$Date
dates <- pm1$Date
str(date)
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
q()
library(swirl)
swirl()
head(test)
head(dates)
NEI <- readRDS("summarySCC_PM25.rds")
setwd()
getwd()
setwd("C:/Users/Alex/Documents/GitHub/Fine_particulate_matter_analysis")
NEI <- readRDS("summarySCC_PM25.rds")
Emissions_Data <- subset(NEI,NEI$year %in% c(1999,2002,2005,2008))
length(Emissions_Data$year)
length(NEI$year)
NEI$year == 2003
sum(NEI$year == 2003)
?aggregate
Emissions_Data <- aggregate(NEI, by = Year, FUN = sum)
Emissions_Data <- aggregate(NEI, by = year, FUN = sum)
Emissions_Data <- aggregate(NEI, by = NEI$year, FUN = sum)
Emissions_Data <- aggregate(NEI, by = c(NEI$year), FUN = sum)
Emissions_Data <- aggregate(Emissions ~ year ,NEI, FUN = sum)
head(Emissions_Data)
plot(Emissions_Data$Emissions,Emissions_Data$year)
plot(Emissions_Data$year, Emissions_Data$Emissions, xlab = "Year", ylab = "Total emissions")
hist(Emissions_Data$year, Emissions_Data$Emissions, xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the United States")
hist(Emissions_Data$Emissions,breaks = Emissions_Data$year)
hist(Emissions_Data$Emissions)
plot(Emissions_Data$year, Emissions_Data$Emissions, type = "1", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the United States")
plot(Emissions_Data$year, Emissions_Data$Emissions, type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the United States")
plot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = expression("Total emissions from PM" [2.5]* " in the United States")
)
Emissions_Data <- aggregate(Emissions,fips ~ year ,NEI, FUN = sum)
Emissions_Data <- aggregate(Emissions|fips ~ year ,NEI, FUN = sum)
Emissions_Data <- with(NEI,aggregate(NEI$Emissions,by=list(year,fips), FUN = sum))
head(Emissions_Data)
Emissions_Data <- with(NEI,aggregate(NEI$Emissions,by=list(year,fips), FUN = sum, rm.na = T))
head(Emissions_Data)
class(NEI$fips)
NEI$fips[1:20]
sumary(NEI$fips)
summary(NEI$fips)
sum(is.na(NEI$fips))
sum(is.na(NEI$year))
Emissions_Data <- aggregate(Emissions ~ year + fips ,NEI, FUN = sum)
head(Emissions_Data)
Nfips <- as.numeric(NEI$fips)
sum(is.na(Nfips))
library(swirl)
NEI <- readRDS("summarySCC_PM25.rds")
Nfips <- as.factor(NEI$fips)
Nfips[1:20]
sum(is.na(Nfips))
sum(Nfips=NA)
sum(Nfips==NA)
Nfips
str(Nfips)
levels(Nfips)
Maryland_Data <- subset(NEI, NEI$fips == "24510")
Emissions_Data <- aggregate(Emissions ~ year + fips ,Maryland_Data, FUN = sum)
Emissions_Data
Emissions_Data <- aggregate(Emissions ~ year ,Maryland_Data, FUN = sum)
Emissions_Data
plot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the United States")
plot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
summary(NEI$type)
head(NEI$type)
NEI$type[1:50]
Nfips <- as.factor(NEI$type)
summary(Nfips)
Baltimore_Data <- subset(NEI, NEI$fips == "24510")
Emissions_Data <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
Emissions_Data
plot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
library(ggplot2)
qplot(Emissions_Data$year, Emissions_Data$Emissions, , type = "l", xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
qplot(Emissions_Data$year, Emissions_Data$Emissions, , color = Emissions_Data$type)
qplot(Emissions_Data$year, Emissions_Data$Emissions, geom="density", color = Emissions_Data$type)
qplot(year, missions, data = Emissions_Data , geom="density",color = Emissions_Data$type)
qplot(year, Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type)
qplot(year,  fill=Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type)
qplot(year,  fill=Emissions, data = Emissions_Data , geom="density")
qplot(year,  fill=Emissions, data = Emissions_Data , geom="density", alpha=I(.5))
qplot(year,  fill=Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type, alpha=I(.5))
Baltimore_Data$type <- as.factor(Baltimore_Data$type)
whith(Emissions_Data, sm.density.compare(year, type, xlab="Miles Per Gallon"))
Emissions_Data$type <- as.factor(Emissions_Data$type)
with(Emissions_Data, sm.density.compare(year, type, xlab="Miles Per Gallon"))
hist(Emissions , break = "year", data = Emissions_Data , color = Emissions_Data$type)
hist(Emissions , breaks = "year", data = Emissions_Data , color = Emissions_Data$type)
with(Emissions_Data, hist(Emissions , breaks = "year", data = Emissions_Data , color = Emissions_Data$type))
qplot(year, data = Emissions_Data, fill = Emissions)
qplot(year, Emissions, data = Emissions_Data, facets = . ~ type)
hist(year, Emissions, data = Emissions_Data, facets = . ~ type)
qplot(year, Emissions, data = Emissions_Data, facets = . ~ type, color = type)
qplot(year, Emissions, data = Emissions_Data, facets = type ~ ., color = type)
qplot(year, Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type, xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
qplot(year, Emissions, data = Emissions_Data ,color = Emissions_Data$type, xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
length(Baltimore_Data$Emissions)
qplot(year, Emissions, data = Baltimore_Data , geom="density",color = Emissions_Data$type, xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
qplot(year, data = Baltimore_Data , geom="density", color = Baltimore_Data$type)
qplot(year, data = Baltimore_Data , geom="density", color = Baltimore_Data$type, alpha=I(.5))
qplot(year, data = Baltimore_Data , geom="density", fill = Baltimore_Data$type, alpha=I(.5))
qplot(year, Emissions, data = Emissions_Data , geom="density",color = Emissions_Data$type)
qplot(year, Emissions, data = Emissions_Data , color = Emissions_Data$type)
qplot(year, Emissions, data = Emissions_Data , color = Emissions_Data$type, geom = c("smooth"), method = "lm")
qplot(year, Emissions, data = Emissions_Data , color = Emissions_Data$type, geom = c("points","smooth"), method = "lm")
qplot(year, Emissions, data = Emissions_Data , color = Emissions_Data$type, geom = c("point","smooth"), method = "lm")
source("plot.R")
getwd()
source("plot3.R")
plot3()
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 in the Baltimore City, Maryland")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions from PM2.5 based on the source type in the Baltimore City, Maryland")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
SCC <- readRDS("Source_Classification_Code.rds")
SCC[1,]
names(SCC)
SCC[1,1:3]
SCC[1,1:2]
SCC[1,1:4]
SCC[1,1:5]
SCC[1,1:6]
SCC[1,1:7]
SCC[1,1:8]
SCC[1,1:9]
SCC[1,1:10]
?png
source("plo1.R")
source("plot1.R")
plot1()
plot2()
source("plot2.R")
plot2()
source("plot3.R")
plot3()
NEI <- readRDS("summarySCC_PM25.rds")
Baltimore_Data <- subset(NEI, NEI$fips == "24510")
Emissions_Data <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
png(file = "plot3.png")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
dev.off()
base_plot <- ggplot(Emissions_Data, aes(year, Emissions))
base_plot + geom_point()
base_plot + geom_point() + geom_smooth(method = "lm”)
base_plot
base_plot + geom_point() + geom_smooth(method = "lm”)
)
base_plot + geom_point() + geom_smooth()
base_plot + geom_point() + facet_grid(. ~ type)
base_plot + geom_point() + facet_grid(type ~ .)
base_plot + geom_point() + facet_grid(type ~ .) + geom_smooth(method = "lm”)
base_plot + geom_point() + facet_grid(type ~ .) + geom_smooth()
base_plot + geom_point() + facet_grid(type ~ .) + geom_smooth(method = "lm")
par(mfrow= c(1,2))
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
base_plot <- ggplot(Emissions_Data, aes(year, Emissions))
base_plot + geom_point() + facet_grid(type ~ .) + geom_smooth(method = "lm")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
par(mfrow= c(2,1))
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"))
screen(2)
plot( rnorm( n = 10 ), col = "red", main = "plot 1", cex.lab = 1.1 )
##  The second plot is located in row 1, column 2:
plot( runif( n = 10 ), col = "blue", main = "plot 2", cex.lab = 1.1 )
Balt_Emmission <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
Emissions_Data <- aggregate(Emissions ~ year + type ,NEI, FUN = sum)
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the United States")
base_plot <- ggplot(Emissions_Data, aes(year, Emissions))
base_plot + geom_point() + facet_grid(type ~ .) + geom_smooth(method = "lm")
base_plot <- ggplot(Emissions_Data, aes(year, Emissions))
base_plot + geom_point() + geom_smooth(method = "lm")
p1 <-  qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
p2 <-  qplot(year, Emissions, data = Emissions_Data , color = type, geom = c("point","smooth"),
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the United States")
multiplot(p1,p2,cols=2)
?multiplot
source("plot3.R")
plot3()
NEI <- readRDS("summarySCC_PM25.rds")
## Extract the baltimore data only
Baltimore_Data <- subset(NEI, NEI$fips == "24510")
## Get the total emissions per year
Balt_Emmission <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
png(file = "plot3.png")
png(file = "plot3.png")
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
dev.off()
source("plot3.R")
plot3()
dev.off()
dev.off()
source("plot3.R")
dev.off()
plot3()
SCC <- readRDS("Source_Classification_Code.rds")
SCC[2:3]
SCC[2,2:3]
SCC[1:5,2:3]
SCC[1:10,2:3]
SCC[1:10,2:4]
SCC[1:10,3:4]
SCC[1:10,c(3,5)]
SCC[1:10,c(3,6)]
SCC[1:10,c(3,7)]
SCC[1:10,c(3,8)]
SCC[1:10,c(3,9)]
SCC[50:55,c(2,3)]
length( SCC[,2])
class( SCC[,2])
SCC[,2]
SCC[200:210,c(2,3)]
SCC[200:210,c(2,12)]
SCC[200:210,c(2,11)]
SCC[200:210,c(2,10)]
SCC[200:210,c(2,13)]
SCC[200:210,c(2,14)]
SCC[200:210,c(2,15)]
SCC[200:210,c(2,16)]
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
dim(NEI)
dim(SCC)
?grep
grep("coal",SCC$Short.Name)
SCC$Short.Name[c(4520,4673,4674,4675,4676,4677,4678,4679,4680)]
grep("Coal",SCC$Short.Name)
SCC$Short.Name[c(85,86,87)]
SCC$Short.Name[c(40)]
names(SCC)
test <-  SCC[grep("Coal",SCC$Short.Name),1]
test[1:20]
grep("Coal",SCC$Short.Name, value = T)[1:20]
grep("vehicle ",SCC$Short.Name, value = T)[1:20]
grep("vehicle ",SCC$Short.Name, value = T)
grep("vehicle",SCC$Short.Name, value = T)
grep("motor",SCC$Short.Name, value = T)
coal_data <- subset(NEI, NEI$SCC == SCC[grep("Coal",SCC$Short.Name),1])
NEI$SCC == SCC[grep("Coal",SCC$Short.Name),1]
coal_data <- subset(NEI, NEI$SCC %in% SCC[grep("Coal",SCC$Short.Name),1])
NEI$SCC %in% SCC[grep("Coal",SCC$Short.Name),1]
coal_data <- subset(NEI, NEI$SCC %in% SCC[grep("Coal",SCC$Short.Name),1])
coal_sources <- SCC[grep("Coal",SCC$Short.Name),1]
coal_data <- subset(NEI, NEI$SCC %in% coal_sources)
length(coal_data)
coal_data
Coal_Emmission <- aggregate(Emissions ~ year + type ,coal_data, FUN = sum)
qplot(year, Emissions, data = Coal_Emmission , color = type, geom = c("point","smooth"), method = "lm")
library(ggplot2)
qplot(year, Emissions, data = Coal_Emmission , color = type, geom = c("point","smooth"), method = "lm")
Coal_Emmission <- aggregate(Emissions ~ year + SCC ,coal_data, FUN = sum)
qplot(year, Emissions, data = Coal_Emmission , color = type, geom = c("point","smooth"), method = "lm")
qplot(year, Emissions, data = Coal_Emmission , color = SCC, geom = c("point","smooth"), method = "lm")
Coal_Emmission
Coal_Emmission
qplot(year, Emissions, data = Coal_Emmission ,geom = c("point"))
qplot(year, Emissions, data = Coal_Emmission, color = SCC, geom = c("point"))
class(Coal_Emmission$SCC)
Coal_Emmission$SCC <- as.factor(Coal_Emmission$SCC)
summary()
summary(Coal_Emmission$SC)
summary(Coal_Emmission$SCC)
Coal_Emmission$SCC <- as.factor(Coal_Emmission$SCC)
qplot(year, Emissions, data = Coal_Emmission, color = SCC, geom = c("point"))
summary(Coal_Emmission$SCC)
class(Coal_Emmission$SCC)
coal_sources
plot(Coal_Emmission$year, Coal_Emmission$Emissions, , type = "l")
plot(Coal_Emmission$year, Coal_Emmission$Emissions, color = SCC , type = "l")
plot(Coal_Emmission$year, Coal_Emmission$Emissions, color = Coal_Emmission$SCC , type = "l")
Coal_Emmission <- aggregate(Emissions ~ year ,coal_data, FUN = sum)
warnings()
plot(Coal_Emmission$year, Coal_Emmission$Emissions, type = "l")
sum(NEI$year == 2000)
sum(NEI$year == 2004)
sum(Coal_Emmission$year == 2004)
sum(Coal_Emmission$year == 2000)
qplot(year, Emissions, data = Coal_Emmission)
plot(Coal_Emmission$year, Coal_Emmission$Emissions, type = "l")
qplot(year, Emissions, data = Coal_Emmission, geom = c("point","smooth"), method = "lm")
plot(Coal_Emmission$year, Coal_Emmission$Emissions, type = "l", xlab = "Year", ylab = "Total emissions",
main = "Emissions from coal in the United States ")
NEI$type[1:20]
NEI$type[1:500]
NEI$fips == "24510" && NEI$type == "ON-ROAD"
NEI$fips == "24510" & NEI$type == "ON-ROAD"
## Extract the baltimore data only
Baltimore_Data <- subset(NEI, NEI$fips == "24510" & NEI$type == "ON-ROAD")
## Get the total emissions per year
Balt_Emmission <- aggregate(Emissions ~ year ,Baltimore_Data, FUN = sum)
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Balt_Emmission, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City")
## Extract the baltimore data and the motor vehicle sources
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips == "06037") & NEI$type == "ON-ROAD")
## Get the total emissions per year
Cities_Emmission <- aggregate(Emissions ~ year + fips,Baltimore_Data, FUN = sum)
qplot(year, Emissions, data = Cities_Emmission, color = fips, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City")
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips == "06037") & NEI$type == "ON-ROAD")
Cities_Data$fips == "06037"
sum(Cities_Data$fips == "06037")
head(Cities_Emmission)
Cities_Emmission == 06037
class()
class( sources
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips)
class(NEI$fips)
Baltimore_Data <- subset(NEI, NEI$fips == "24510")
## Get the total emissions per year
Balt_Emmission <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
Balt_Emmission
t <- as.factor(Cities_Data$fips)
t
Cities_Data$fips <- as.factor(Cities_Data$fips)
Cities_Emmission <- aggregate(Emissions ~ year + fips,Baltimore_Data, FUN = sum)
Cities_Emmission
Cities_Emmission <- aggregate(Emissions ~ fips + year,Baltimore_Data, FUN = sum)
Cities_Emmission
Cities_Emmission <- aggregate(Emissions ~ fips ,Baltimore_Data, FUN = sum)
Cities_Emmission
levels(Cities_Data$fips)
Cities_Data$fips[231]
table( Cities_Data$fips)
Cities_Emmission <- aggregate(Emissions ~ year + fips ,Cities_Data, FUN = sum)
qplot(year, Emissions, data = Cities_Emmission, color = fips, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City")
Cities_Emmission
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips == "06037") & NEI$type == "ON-ROAD")
Cities_Data$fips <- as.factor(Cities_Data$fips)
## Get the total emissions per year
Cities_Emmission <- aggregate(Emissions ~ year + fips ,Cities_Data, FUN = sum)
Cities_Emmission
Cities_Data[231,]
